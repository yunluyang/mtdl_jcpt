<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.mcep.upms.dao.mapper.UpmsJobsMapper">
  <resultMap id="BaseResultMap" type="net.mcep.upms.dao.model.UpmsJobs">
    <id column="jobs_id" jdbcType="INTEGER" property="jobsId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="ctime" jdbcType="BIGINT" property="ctime" />
    <result column="orders" jdbcType="BIGINT" property="orders" />
    <result column="organization_id" jdbcType="INTEGER" property="organizationId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="pname" jdbcType="VARCHAR" property="pname" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    upms_jobs.jobs_id, upms_jobs.name, upms_jobs.title, upms_jobs.description, upms_jobs.ctime, upms_jobs.orders, upms_jobs.organization_id
  </sql>
  <select id="selectByExample" parameterType="net.mcep.upms.dao.model.UpmsJobsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,o.name pname
    from upms_jobs
    left join upms_organization o
    on upms_jobs.organization_id = o.organization_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>

  <select id="selectByExample1" parameterType="net.mcep.upms.dao.model.UpmsJobsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,uj.user_id
    ,u.realname
    from upms_jobs
    left join upms_user_jobs uj
    on upms_jobs.jobs_id = uj.jobs_id
    left join upms_user u
    on uj.user_id = u.user_id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from upms_jobs
    where jobs_id = #{jobsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upms_jobs
    where jobs_id = #{jobsId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.mcep.upms.dao.model.UpmsJobsExample">
    delete from upms_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.mcep.upms.dao.model.UpmsJobs">
    insert into upms_jobs (jobs_id, name, title, 
      description, ctime, orders
      )
    values (#{jobsId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{ctime,jdbcType=BIGINT}, #{orders,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="net.mcep.upms.dao.model.UpmsJobs">
    insert into upms_jobs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobsId != null">
        jobs_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobsId != null">
        #{jobsId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null">
        #{organizationId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.mcep.upms.dao.model.UpmsJobsExample" resultType="java.lang.Long">
    select count(*) from upms_jobs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upms_jobs
    <set>
      <if test="record.jobsId != null">
        jobs_id = #{record.jobsId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upms_jobs
    set jobs_id = #{record.jobsId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=BIGINT},
      orders = #{record.orders,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.mcep.upms.dao.model.UpmsJobs">
    update upms_jobs
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=BIGINT},
      </if>
      <if test="organizationId != null">
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
    </set>
    where jobs_id = #{jobsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.mcep.upms.dao.model.UpmsJobs">
    update upms_jobs
    set name = #{name,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=BIGINT},
      orders = #{orders,jdbcType=BIGINT}
    where jobs_id = #{jobsId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>