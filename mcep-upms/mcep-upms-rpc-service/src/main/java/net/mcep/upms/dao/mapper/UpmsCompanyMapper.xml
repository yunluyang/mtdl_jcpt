<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.mcep.upms.dao.mapper.UpmsCompanyMapper">
  <resultMap id="BaseResultMap" type="net.mcep.upms.dao.model.UpmsCompany">
    <id column="company_id" jdbcType="INTEGER" property="companyId" />
    <result column="company_name" jdbcType="VARCHAR" property="companyName" />
    <result column="company_code" jdbcType="VARCHAR" property="companyCode" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="companyname_short" jdbcType="VARCHAR" property="companynameShort" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="company_nature" jdbcType="INTEGER" property="companyNature" />
    <result column="representative" jdbcType="VARCHAR" property="representative" />
    <result column="registered_capital" jdbcType="REAL" property="registeredCapital" />
    <result column="inner_or_outer" jdbcType="INTEGER" property="innerOrOuter" />
    <result column="company_proprietor_id" jdbcType="INTEGER" property="companyProprietorId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="net.mcep.upms.dao.model.UpmsCompany">
    <result column="introduction" jdbcType="LONGVARCHAR" property="introduction" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    company_id, company_name, company_code, address, companyname_short, province, parent_id,
    company_nature, representative, registered_capital, inner_or_outer, company_proprietor_id
  </sql>
  <sql id="Blob_Column_List">
    introduction
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="net.mcep.upms.dao.model.UpmsCompanyExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upms_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="net.mcep.upms.dao.model.UpmsCompanyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from upms_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from upms_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from upms_company
    where company_id = #{companyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.mcep.upms.dao.model.UpmsCompanyExample">
    delete from upms_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.mcep.upms.dao.model.UpmsCompany">
    insert into upms_company (company_id, company_name, company_code,
    address, companyname_short, province,
    parent_id, company_nature, representative,
    registered_capital, inner_or_outer, company_proprietor_id,
    introduction)
    values (#{companyId,jdbcType=INTEGER}, #{companyName,jdbcType=VARCHAR}, #{companyCode,jdbcType=VARCHAR},
    #{address,jdbcType=VARCHAR}, #{companynameShort,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR},
    #{parentId,jdbcType=INTEGER}, #{companyNature,jdbcType=INTEGER}, #{representative,jdbcType=VARCHAR},
    #{registeredCapital,jdbcType=REAL}, #{innerOrOuter,jdbcType=INTEGER}, #{companyProprietorId,jdbcType=INTEGER},
    #{introduction,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.mcep.upms.dao.model.UpmsCompany">
    insert into upms_company
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        company_id,
      </if>
      <if test="companyName != null">
        company_name,
      </if>
      <if test="companyCode != null">
        company_code,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="companynameShort != null">
        companyname_short,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="parentId != null">
        parent_id,
      </if>
      <if test="companyNature != null">
        company_nature,
      </if>
      <if test="representative != null">
        representative,
      </if>
      <if test="registeredCapital != null">
        registered_capital,
      </if>
      <if test="innerOrOuter != null">
        inner_or_outer,
      </if>
      <if test="companyProprietorId != null">
        company_proprietor_id,
      </if>
      <if test="introduction != null">
        introduction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="companyId != null">
        #{companyId,jdbcType=INTEGER},
      </if>
      <if test="companyName != null">
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="companynameShort != null">
        #{companynameShort,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="companyNature != null">
        #{companyNature,jdbcType=INTEGER},
      </if>
      <if test="representative != null">
        #{representative,jdbcType=VARCHAR},
      </if>
      <if test="registeredCapital != null">
        #{registeredCapital,jdbcType=REAL},
      </if>
      <if test="innerOrOuter != null">
        #{innerOrOuter,jdbcType=INTEGER},
      </if>
      <if test="companyProprietorId != null">
        #{companyProprietorId,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.mcep.upms.dao.model.UpmsCompanyExample" resultType="java.lang.Long">
    select count(*) from upms_company
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update upms_company
    <set>
      <if test="record.companyId != null">
        company_id = #{record.companyId,jdbcType=INTEGER},
      </if>
      <if test="record.companyName != null">
        company_name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCode != null">
        company_code = #{record.companyCode,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.companynameShort != null">
        companyname_short = #{record.companynameShort,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null">
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.companyNature != null">
        company_nature = #{record.companyNature,jdbcType=INTEGER},
      </if>
      <if test="record.representative != null">
        representative = #{record.representative,jdbcType=VARCHAR},
      </if>
      <if test="record.registeredCapital != null">
        registered_capital = #{record.registeredCapital,jdbcType=REAL},
      </if>
      <if test="record.innerOrOuter != null">
        inner_or_outer = #{record.innerOrOuter,jdbcType=INTEGER},
      </if>
      <if test="record.companyProprietorId != null">
        company_proprietor_id = #{record.companyProprietorId,jdbcType=INTEGER},
      </if>
      <if test="record.introduction != null">
        introduction = #{record.introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update upms_company
    set company_id = #{record.companyId,jdbcType=INTEGER},
    company_name = #{record.companyName,jdbcType=VARCHAR},
    company_code = #{record.companyCode,jdbcType=VARCHAR},
    address = #{record.address,jdbcType=VARCHAR},
    companyname_short = #{record.companynameShort,jdbcType=VARCHAR},
    province = #{record.province,jdbcType=VARCHAR},
    parent_id = #{record.parentId,jdbcType=INTEGER},
    company_nature = #{record.companyNature,jdbcType=INTEGER},
    representative = #{record.representative,jdbcType=VARCHAR},
    registered_capital = #{record.registeredCapital,jdbcType=REAL},
    inner_or_outer = #{record.innerOrOuter,jdbcType=INTEGER},
    company_proprietor_id = #{record.companyProprietorId,jdbcType=INTEGER},
    introduction = #{record.introduction,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update upms_company
    set company_id = #{record.companyId,jdbcType=INTEGER},
    company_name = #{record.companyName,jdbcType=VARCHAR},
    company_code = #{record.companyCode,jdbcType=VARCHAR},
    address = #{record.address,jdbcType=VARCHAR},
    companyname_short = #{record.companynameShort,jdbcType=VARCHAR},
    province = #{record.province,jdbcType=VARCHAR},
    parent_id = #{record.parentId,jdbcType=INTEGER},
    company_nature = #{record.companyNature,jdbcType=INTEGER},
    representative = #{record.representative,jdbcType=VARCHAR},
    registered_capital = #{record.registeredCapital,jdbcType=REAL},
    inner_or_outer = #{record.innerOrOuter,jdbcType=INTEGER},
    company_proprietor_id = #{record.companyProprietorId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.mcep.upms.dao.model.UpmsCompany">
    update upms_company
    <set>
      <if test="companyName != null">
        company_name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCode != null">
        company_code = #{companyCode,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="companynameShort != null">
        companyname_short = #{companynameShort,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null">
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="companyNature != null">
        company_nature = #{companyNature,jdbcType=INTEGER},
      </if>
      <if test="representative != null">
        representative = #{representative,jdbcType=VARCHAR},
      </if>
      <if test="registeredCapital != null">
        registered_capital = #{registeredCapital,jdbcType=REAL},
      </if>
      <if test="innerOrOuter != null">
        inner_or_outer = #{innerOrOuter,jdbcType=INTEGER},
      </if>
      <if test="companyProprietorId != null">
        company_proprietor_id = #{companyProprietorId,jdbcType=INTEGER},
      </if>
      <if test="introduction != null">
        introduction = #{introduction,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.mcep.upms.dao.model.UpmsCompany">
    update upms_company
    set company_name = #{companyName,jdbcType=VARCHAR},
    company_code = #{companyCode,jdbcType=VARCHAR},
    address = #{address,jdbcType=VARCHAR},
    companyname_short = #{companynameShort,jdbcType=VARCHAR},
    province = #{province,jdbcType=VARCHAR},
    parent_id = #{parentId,jdbcType=INTEGER},
    company_nature = #{companyNature,jdbcType=INTEGER},
    representative = #{representative,jdbcType=VARCHAR},
    registered_capital = #{registeredCapital,jdbcType=REAL},
    inner_or_outer = #{innerOrOuter,jdbcType=INTEGER},
    company_proprietor_id = #{companyProprietorId,jdbcType=INTEGER},
    introduction = #{introduction,jdbcType=LONGVARCHAR}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.mcep.upms.dao.model.UpmsCompany">
    update upms_company
    set company_name = #{companyName,jdbcType=VARCHAR},
      company_code = #{companyCode,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      companyname_short = #{companynameShort,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      company_nature = #{companyNature,jdbcType=INTEGER},
      representative = #{representative,jdbcType=VARCHAR},
      registered_capital = #{registeredCapital,jdbcType=REAL},
      inner_or_outer = #{innerOrOuter,jdbcType=INTEGER},
      company_proprietor_id = #{companyProprietorId,jdbcType=INTEGER}
    where company_id = #{companyId,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>